plugins {
  id 'java'
  id 'war'
}

group 'org.scoula'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.11.0'
  springVersion = '5.3.37'
  lombokVersion = '1.18.30'
  springSecurityVersion='5.8.13'
}

sourceCompatibility = '1.17'
targetCompatibility = '1.17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

dependencies {
  // AWS S3
  implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

  // Tabula
  implementation 'technology.tabula:tabula:1.0.5'

  // swagger
  implementation 'io.springfox:springfox-swagger2:2.9.2'
  implementation 'io.springfox:springfox-swagger-ui:2.9.2'

  // 스프링
  implementation ("org.springframework:spring-context:${springVersion}")
          { exclude group: 'commons-logging', module: 'commons-logging' }
  implementation "org.springframework:spring-webmvc:${springVersion}"
  implementation 'javax.inject:javax.inject:1'

  // AOP
  implementation 'org.aspectj:aspectjrt:1.9.20'
  implementation 'org.aspectj:aspectjweaver:1.9.20'

  // JSP, SERVLET, JSTL
  implementation('javax.servlet:javax.servlet-api:4.0.1')
  // compileOnly 'javax.servlet.jsp:jsp-api:2.1'
  compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'
  implementation 'javax.servlet:jstl:1.2'

  // Log4j2 Logging
  implementation 'org.apache.logging.log4j:log4j-api:2.18.0'
  implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
  implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.18.0'

  // xml 내 한글 처리
  implementation 'xerces:xercesImpl:2.12.2'

  // Lombok
  compileOnly "org.projectlombok:lombok:${lombokVersion}"
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  // Jackson - Json 처리
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'
  // Jackson 모듈 LocalDate 처리를 위해 모듈 추가
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

  //mysql
  implementation 'com.mysql:mysql-connector-j:8.1.0'
  //Connection Pool
  implementation 'com.zaxxer:HikariCP:2.7.4'

  // Redis
  implementation 'org.springframework.data:spring-data-redis:2.7.18'
  implementation 'io.lettuce:lettuce-core:6.2.6.RELEASE'

  //스프링 jdbc
  implementation "org.springframework:spring-jdbc:${springVersion}"
  //트랜잭션
  implementation "org.springframework:spring-tx:${springVersion}"

  //mybatis
  implementation 'org.mybatis:mybatis:3.4.6'
  //mybatis 와 spring 연결
  implementation 'org.mybatis:mybatis-spring:1.3.2'

  //jdbc 관련 로그
  implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'
  implementation 'org.apache.logging.log4j:log4j-api:2.0.1'
  implementation 'org.apache.logging.log4j:log4j-core:2.0.1'

  // 보안
  implementation("org.springframework.security:spring-security-web:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-config:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-core:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-taglibs:${springSecurityVersion}")

  // jwt
  implementation("io.jsonwebtoken:jjwt-api:0.11.5")
  runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
  implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")

  // 테스트
  testImplementation "org.springframework:spring-test:${springVersion}"
  testCompileOnly"org.projectlombok:lombok:${lombokVersion}"
  testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

  implementation 'io.springfox:springfox-swagger2:2.9.2'
  implementation 'io.springfox:springfox-swagger-ui:2.9.2'

  // HTTP 비동기 통신용 WebClient 사용을 위한 의존성
  implementation 'org.springframework:spring-webflux:5.3.37'
  // WebClient 사용을 위한 Netty Client
  implementation 'io.projectreactor.netty:reactor-netty:1.1.17'
  // Java에서 @Generated 등의 표준 어노테이션 사용을 위한 API
  implementation 'javax.annotation:javax.annotation-api:1.3.2'
  // org.json 패키지의 JSON 파서 라이브러리
  implementation 'org.json:json:20230227'
  // LocalDateTime 직렬화 지원 (Jackson)
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

}

test {
  useJUnitPlatform()
}