plugins {
  id 'java'
  id 'war'
}

group 'org.scoula'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.11.0'
  springVersion = '5.3.37'
  lombokVersion = '1.18.30'
  springSecurityVersion='5.8.13'
  slf4jVersion = '2.0.16'
  log4j2Version = '2.23.1'
  jacksonVersion = '2.17.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

dependencies {
  // AWS S3
  implementation('org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE') {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    exclude group: 'ch.qos.logback', module: 'logback-classic'
    exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
  }

  // Tabula
  implementation 'technology.tabula:tabula:1.0.5'

  // swagger
  implementation 'io.springfox:springfox-swagger2:2.9.2'
  implementation 'io.springfox:springfox-swagger-ui:2.9.2'

  // Spring
  implementation ("org.springframework:spring-context:${springVersion}")
          { exclude group: 'commons-logging', module: 'commons-logging' }
  implementation "org.springframework:spring-webmvc:${springVersion}"
  implementation 'javax.inject:javax.inject:1'

  // AOP
  implementation 'org.aspectj:aspectjrt:1.9.20'
  implementation 'org.aspectj:aspectjweaver:1.9.20'

  // JSP, SERVLET, JSTL
  compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
  compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'
  implementation 'javax.servlet:jstl:1.2'

  // Log4j2 Logging
  // --- 로깅: SLF4J + Log4j2(신형 브리지) ---
  implementation "org.slf4j:slf4j-api:${slf4jVersion}"
  implementation "org.apache.logging.log4j:log4j-api:${log4j2Version}"
  implementation "org.apache.logging.log4j:log4j-core:${log4j2Version}"
  implementation "org.apache.logging.log4j:log4j-slf4j2-impl:${log4j2Version}" // SLF4J → Log4j2
  implementation "org.slf4j:jcl-over-slf4j:${slf4jVersion}" // Spring commons-logging → SLF4J


  // xml 내 한글 처리
  implementation 'xerces:xercesImpl:2.12.2'

  // Lombok
  compileOnly "org.projectlombok:lombok:${lombokVersion}"
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  // Jackson - Json 처리
  implementation platform("com.fasterxml.jackson:jackson-bom:${jacksonVersion}") // ex. 2.17.2
  implementation 'com.fasterxml.jackson.core:jackson-databind'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

  // DB - mysql
  implementation 'com.mysql:mysql-connector-j:8.1.0'
  //Connection Pool
  implementation 'com.zaxxer:HikariCP:2.7.4'

  // Spring JDBC
  implementation "org.springframework:spring-jdbc:${springVersion}"
  // Spring 트랜잭션 관리
  implementation "org.springframework:spring-tx:${springVersion}"

  // MyBatis
  implementation 'org.mybatis:mybatis:3.4.6'
  implementation 'org.mybatis:mybatis-spring:1.3.2'

  // JDBC 로그 (log4jdbc)
  implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'

  // Security
  implementation("org.springframework.security:spring-security-web:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-config:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-core:${springSecurityVersion}")
  implementation("org.springframework.security:spring-security-taglibs:${springSecurityVersion}")

  // JWT
  implementation("io.jsonwebtoken:jjwt-api:0.11.5")
  runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
  implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")

  // WebClient
  implementation 'org.springframework:spring-webflux:5.3.37'
  implementation 'io.projectreactor.netty:reactor-netty:1.0.39'
  implementation 'javax.annotation:javax.annotation-api:1.3.2'
  implementation 'org.json:json:20230227'

  // Test
  testImplementation "org.springframework:spring-test:${springVersion}"
  testCompileOnly"org.projectlombok:lombok:${lombokVersion}"
  testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
  useJUnitPlatform()
}